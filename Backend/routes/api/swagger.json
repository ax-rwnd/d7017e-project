{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is a simple API for total world dominance!!! asdfasdfasdf234234",
    "version" : "1.0.0",
    "title" : "Simple Inventory API",
    "contact" : {
      "email" : "you@your-company.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/oribabky/gppz/1.0.0",
  "tags" : [ {
    "name" : "auth",
    "description" : "user authentication"
  }, {
    "name" : "courses"
  }, {
    "name" : "tester",
    "description" : "endpoints to communicate with tester"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/auth/login/ltu" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "user login",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ticket",
          "in" : "query",
          "description" : "ticket",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "service",
          "in" : "query",
          "description" : "service",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "$ref" : "#/definitions/Login"
            }
          }
        }
      }
    },
    "/auth/login/accesstoken" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "user login",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "$ref" : "#/definitions/Login"
            }
          }
        }
      }
    },
    "/auth/login/fake" : {
      "get" : {
        "tags" : [ "auth" ],
        "summary" : "do a fake-login to get access token",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok"
          }
        }
      }
    },
    "/api/tester/languages" : {
      "get" : {
        "tags" : [ "tester" ],
        "summary" : "get all programming languages supported by tester",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "$ref" : "#/definitions/Testerlanguages"
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    },
    "/api/courses" : {
      "get" : {
        "tags" : [ "courses" ],
        "summary" : "find courses",
        "description" : "Find all courses\n",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Course"
              }
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "courses" ],
        "summary" : "create a course",
        "parameters" : [ {
          "in" : "body",
          "name" : "name, description, hidden",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Course"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Course"
              }
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    },
    "/api/courses/me" : {
      "get" : {
        "tags" : [ "courses" ],
        "summary" : "find courses that the current user is enrolled to",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Course"
              }
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    },
    "/api/courses/{course_id}" : {
      "get" : {
        "tags" : [ "courses" ],
        "summary" : "find a specific course",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "course_id",
          "in" : "path",
          "description" : "ID of course (not course code) to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "$ref" : "#/definitions/Course"
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    },
    "/api/courses/{course_id}/students" : {
      "get" : {
        "tags" : [ "courses" ],
        "summary" : "find all students taking a specific course",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "course_id",
          "in" : "path",
          "description" : "ID of course (not course code)",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    },
    "/api/courses/{course_id}/assignments" : {
      "post" : {
        "tags" : [ "assignments" ],
        "summary" : "create assignment in a course",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "course_id",
          "in" : "path",
          "description" : "ID of course (not course code) to return",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "name, description, hidden",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Assignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ok",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Assignment"
              }
            }
          },
          "401" : {
            "description" : "token expired"
          },
          "500" : {
            "description" : "internal server error"
          }
        }
      }
    }
  },
  "definitions" : {
    "Course" : {
      "type" : "object",
      "required" : [ "hidden", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "introduction to self-awareness"
        },
        "description" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Very vague course"
        },
        "hidden" : {
          "type" : "boolean",
          "example" : true
        },
        "teachers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "students" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "admin", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Sam"
        },
        "email" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Sam@hotmail.com"
        },
        "admin" : {
          "type" : "boolean",
          "example" : true
        },
        "courses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Course"
          }
        },
        "providers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : ""
          }
        }
      }
    },
    "Assignment" : {
      "type" : "object",
      "required" : [ "hidden", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Recursive Bounce"
        },
        "description" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "look at chapter 8 recursion for hints on how to build recursive functions"
        },
        "hidden" : {
          "type" : "boolean",
          "example" : true
        },
        "tests" : {
          "$ref" : "#/definitions/Assignment_tests"
        },
        "optional_tests" : {
          "$ref" : "#/definitions/Assignment_tests"
        }
      }
    },
    "Test" : {
      "type" : "object",
      "required" : [ "stdout" ],
      "properties" : {
        "stdout" : {
          "type" : "string",
          "example" : "hello world\\n"
        },
        "stdin" : {
          "type" : "string",
          "example" : "55"
        },
        "args" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : ""
          }
        }
      }
    },
    "Login" : {
      "type" : "object",
      "required" : [ "admin", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Sam"
        },
        "email" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Sam@hotmail.com"
        },
        "admin" : {
          "type" : "boolean",
          "example" : true
        },
        "courses" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Course"
          }
        },
        "providers" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : ""
          }
        }
      }
    },
    "Testerlanguages" : {
      "properties" : {
        "languages" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : ""
          }
        }
      }
    },
    "Assignment_tests" : {
      "properties" : {
        "io" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Test"
          }
        },
        "lint" : {
          "type" : "boolean"
        }
      }
    }
  }
}